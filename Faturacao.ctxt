#BlueJ class context
comment0.target=Faturacao
comment1.params=
comment1.target=Faturacao()
comment10.params=u
comment10.target=void\ setUsers(java.util.HashMap)
comment11.params=fat
comment11.target=void\ setFaturas(java.util.HashMap)
comment12.params=c
comment12.target=void\ setLogedIn(Contribuinte)
comment13.params=
comment13.target=java.lang.String\ toString()
comment14.params=
comment14.target=void\ gravaObj()
comment14.text=\n\ Gravar\ o\ estado\ da\ aplica\u00E7\u00E3o\ num\ determinado\ ficheiro.\n
comment15.params=
comment15.target=Faturacao\ leObj()
comment15.text=\n\ Iniciar\ a\ aplica\u00E7\u00E3o\ com\ o\ estado\ guardado\ num\ determinado\ ficheiro.\n
comment16.params=f\ ap
comment16.target=void\ log(java.lang.String,\ boolean)
comment16.text=\n\ Fazer\ um\ ficheiro\ de\ texto\ log\ com\ toda\ a\ informa\u00E7\u00E3o\ na\ aplicacao\ no\ momento\ em\ que\ \u00E9\ fechada.\n
comment17.params=c
comment17.target=void\ registarContribuinte(Contribuinte)
comment17.text=\n\ Regista\ Contribuinte\ na\ aplica\u00E7\u00E3o\n
comment18.params=nif\ password
comment18.target=void\ iniciaSessao(int,\ java.lang.String)
comment18.text=\n\ Inicia\ sessao\ com\ nif\ e\ password.\n
comment19.params=
comment19.target=void\ terminaSessao()
comment19.text=\n\ Funcao\ que\ termina\ a\ sessao\ do\ contribuinte\ logado.\n
comment2.params=users\ faturas\ hist\ atividades\ logedIn
comment2.target=Faturacao(java.util.Map,\ java.util.Map,\ Historico,\ java.util.Map,\ Contribuinte)
comment20.params=nif_cliente\ descricao\ valorFact\ taxaImposto
comment20.target=void\ novaFactura(int,\ java.lang.String,\ double,\ double)
comment20.text=\n\ Cria\ uma\ factura.\n
comment21.params=lista
comment21.target=long\ maxFatura(java.util.Set)
comment22.params=
comment22.target=java.util.ArrayList\ despesasEmitidas()
comment22.text=\n\ Devolve\ a\ lista\ das\ despesas\ emitidas\ em\ nome\ do\ individuo.\n
comment23.params=
comment23.target=java.util.Map\ deducaoFiscalFamilia()
comment23.text=\n\ Devolve\ o\ montante\ de\ dedu\u00E7ao\ fiscal\ do\ agregado\ familiar\ do\ individuo.\n\ \=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=POR\ FAZER\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\ --TODO\n\ Map<IdAtividade,total\ de\ dedu\u00E7ao\ daquele\ tipo\ de\ atividade>\ isto\ porque\ as\ atividades\ tem\ limite\ de\ dedu\u00E7ao\n\ Falta\ talvez\ por\ uma\ variavel\ na\ atividade\ com\ o\ maximo\ dedutivel(sim\ isto\ existe)\n
comment24.params=f
comment24.target=double\ deducaoFatura(Fatura)
comment25.params=nif
comment25.target=java.util.List\ porClassificar(int)
comment25.text=\n\ Associa\ uma\ classifica\u00E7o\ de\ atividade\ economica\ a\ uma\ fatura\n\ 1\u00BA\ preguntar\ qual\ e\ a\ fatura\ a\ editar\n\ 2\u00BA\ buscar\ as\ possiveis\ actividades\n\ 3\u00BA\ corrijir\ a\ classifica\u00E7ao\ com\ o\ id\ da\ fatura\ e\ o\ id\ da\ atividade\n\ \ --TODO\n
comment26.params=idFatura
comment26.target=java.util.List\ getActPossiveis(long)
comment27.params=idFatura\ atividade
comment27.target=void\ corrigeClassificaFatura(long,\ int)
comment28.params=nomeEmpresa
comment28.target=java.util.ArrayList\ facturasEmpresaData(java.lang.String)
comment28.text=\n\ Devolve\ a\ lista\ das\ facturas\ correspondentes\ a\ uma\ determinada\ empresa\ por\ data\ de\ emissao.\n
comment29.params=nomeEmpresa
comment29.target=java.util.ArrayList\ facturasEmpresaValor(java.lang.String)
comment29.text=\n\ Devolve\ a\ lista\ das\ facturas\ correspondentes\ a\ uma\ determinada\ empresa\ por\ valor.\n
comment3.params=f
comment3.target=Faturacao(Faturacao)
comment30.params=in\ fin
comment30.target=java.util.ArrayList\ facturasContribuinteData(java.time.LocalDate,\ java.time.LocalDate)
comment30.text=\n\ Devolve\ a\ lista\ de\ facturas\ por\ contribuintes\ num\ determinado\ intervalo\ de\ tempo\n\ (feito\ de\ forma\ a\ puder\ ser\ imprimido\ simplesmente\ atraves\ de\ um\ ciclo).\n
comment31.params=
comment31.target=java.util.Map\ facturasContribuinteValor()
comment31.text=\n\ Devolve\ a\ lista\ de\ facturas\ por\ contribuintes\ por\ valor\ decrescente\ de\ despesa.\n
comment32.params=nif\ in\ fim
comment32.target=double\ totalFaturadoColetivo(int,\ java.time.LocalDate,\ java.time.LocalDate)
comment33.params=
comment33.target=java.util.ArrayList\ top10Cont()
comment34.params=x
comment34.target=java.util.ArrayList\ topXEmpresas(int)
comment35.params=nif
comment35.target=double\ deducaoEmpresa(int)
comment36.params=
comment36.target=int\ getTipoUtilizador()
comment36.text=\n\ Devolve\ um\ int\ correspondente\ ao\ tipo\ de\ utilizador\ do\ "logedIn".\n
comment4.params=
comment4.target=java.util.Map\ getUsers()
comment5.params=
comment5.target=java.util.Map\ getFaturas()
comment6.params=
comment6.target=Historico\ getHist()
comment7.params=
comment7.target=java.util.Map\ getAtividades()
comment7.text=\n\ \ \ \ public\ Map<Long,\ ArrayList<Fatura>>\ getFatRegisto()\ {\n\ \ \ \ \ \ \ \ return\ this.hist.getHist().entrySet()\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ .stream()\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ .collect(Collectors\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ .toMap(e->e.getKey(),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ e->e.getValue().stream().map(c->c.clone()).collect(Collectors.toCollection(ArrayList\:\:new))));\n}
comment8.params=
comment8.target=Contribuinte\ getLogedIn()
comment9.params=i
comment9.target=java.lang.String\ getNomeAtividade(int)
numComments=37
